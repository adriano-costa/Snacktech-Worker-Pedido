name: .NET

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ./src/WorkerServiceSolution.sln

    - name: Build
      run: dotnet build ./src/WorkerService/WorkerService.csproj --configuration Release

    - name: Test
      run: dotnet test ./src/WorkerService.Tests/WorkerService.Tests.csproj --configuration Release --collect:"XPlat Code Coverage" --logger:"trx;LogFileName=../TestResults.trx"

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report
      run: reportgenerator -reports:./**/coverage.cobertura.xml -targetdir:./CoverageReport -reporttypes:Html

    - name: Extract Coverage Percentage
      id: coverage
      run: |
        coverage_file=$(find ./**/coverage.cobertura.xml -type f -print -quit)
        coverage_percentage=$(grep -oP 'line-rate="\K[0-9.]+' $coverage_file)
        echo "Coverage Percentage: $coverage_percentage%"
        echo "::set-output name=coverage_percentage::$coverage_percentage"

    - name: Print Coverage Percentage
      run: |
        echo "Coverage Percentage: ${{ steps.coverage.outputs.coverage_percentage }}%"