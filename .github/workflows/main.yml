name: .NET

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ./src/WorkerServiceSolution.sln

    - name: Build
      run: dotnet build ./src/WorkerService/WorkerService.csproj --configuration Release

    - name: Test
      run: dotnet test ./src/WorkerService.Tests/WorkerService.Tests.csproj \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory "./TestResults" \
            --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - name: Extract and Display Code Coverage
      run: |
        # Install dependencies
        sudo apt-get update
        sudo apt-get install -y jq bc

        # Find the coverage report (assuming single test run)
        COVERAGE_FILE=$(find ./TestResults -name 'coverage.cobertura.xml' | head -n 1)

        # Check if coverage file exists
        if [ -f "$COVERAGE_FILE" ]; then
          # Extract coverage percentage from the XML report
          coverage_percentage=$(xmllint --xpath "string(/coverage/@line-rate)" "$COVERAGE_FILE")

          # Convert the decimal coverage to percentage
          coverage_percentage=$(echo "$coverage_percentage * 100" | bc -l)

          # Round the coverage to two decimal places
          coverage_percentage=$(printf "%.2f" "$coverage_percentage")

          # Print the coverage percentage to the console
          echo "Code Coverage: $coverage_percentage%"

        else
          echo "Coverage file not found."
          exit 1
        fi
